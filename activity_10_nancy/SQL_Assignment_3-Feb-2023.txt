1) Create table EMPLOYEE with the following details.

mysql> CREATE TABLE EMPLOYEE (
    ->     EMPLOYEE_ID INT(6) PRIMARY KEY,
    ->     LAST_NAME VARCHAR(25),
    ->     JOB_ID VARCHAR(10),
    ->     SALARY INT(8),
    ->     COMM_PCT INT(4),
    ->     MGR_ID INT(6),
    ->     DEPARTMENT_ID INT(4)
    -> );
Query OK, 0 rows affected, 5 warnings (0.02 sec)

mysql> SELECT * FROM EMPLOYEE;
Empty set (0.00 sec)

2) Insert the following data into EMPLOYEE table.

mysql> INSERT INTO EMPLOYEE VALUES (198, 'Connell', 'SH_CLEARK', 2600, 2.5, 124, 50);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO EMPLOYEE VALUES (199, 'Grant', 'SH_CLEARK', 2600, 2.2, 124, 50);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (200, 'Whalen', 'AD_ASST', 4400, 1.3, 101, 10);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (201, 'Hartstein', 'IT_PROG', 6000, NULL, 100, 20);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (202, 'Fay', 'AC_MGR', 6500, NULL, 210, 20);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (203, 'Mavris', 'AD_VP', 7500, NULL, 101, 40);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (204, 'Baer', 'AD_PRES', 3500, 1.5, 101, 90);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (205, 'Higgins', 'AC_MGR', 2300, NULL, 101, 60);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (206, 'Gitz', 'IT_PROG', 5000, NULL, 103, 60);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (100, 'King', 'AD_ASST', 8956, 0.3, 108, 100);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO EMPLOYEE VALUES (101, 'Kohar', 'SH_CLEARK', 3400, 1.3, 118, 30);
Query OK, 1 row affected (0.00 sec)

mysql> SELECT * FROM EMPLOYEE;
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         100 | King      | AD_ASST   |   8956 |        0 |    108 |           100 |
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
|         200 | Whalen    | AD_ASST   |   4400 |        1 |    101 |            10 |
|         201 | Hartstein | IT_PROG   |   6000 |     NULL |    100 |            20 |
|         202 | Fay       | AC_MGR    |   6500 |     NULL |    210 |            20 |
|         203 | Mavris    | AD_VP     |   7500 |     NULL |    101 |            40 |
|         204 | Baer      | AD_PRES   |   3500 |        2 |    101 |            90 |
|         205 | Higgins   | AC_MGR    |   2300 |     NULL |    101 |            60 |
|         206 | Gitz      | IT_PROG   |   5000 |     NULL |    103 |            60 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
11 rows in set (0.00 sec)

3. Display last_name, job_id, employee_id for each employee with employee_id appearing first.

mysql> SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID FROM EMPLOYEE;
+-------------+-----------+-----------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    |
+-------------+-----------+-----------+
|         100 | King      | AD_ASST   |
|         101 | Kohar     | SH_CLEARK |
|         198 | Connell   | SH_CLEARK |
|         199 | Grant     | SH_CLEARK |
|         200 | Whalen    | AD_ASST   |
|         201 | Hartstein | IT_PROG   |
|         202 | Fay       | AC_MGR    |
|         203 | Mavris    | AD_VP     |
|         204 | Baer      | AD_PRES   |
|         205 | Higgins   | AC_MGR    |
|         206 | Gitz      | IT_PROG   |
+-------------+-----------+-----------+
11 rows in set (0.00 sec)

4) Display the details of all employees of department 60.

mysql> SELECT * FROM EMPLOYEE WHERE DEPARTMENT_ID = 60;
+-------------+-----------+---------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID  | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+---------+--------+----------+--------+---------------+
|         205 | Higgins   | AC_MGR  |   2300 |     NULL |    101 |            60 |
|         206 | Gitz      | IT_PROG |   5000 |     NULL |    103 |            60 |
+-------------+-----------+---------+--------+----------+--------+---------------+
2 rows in set (0.00 sec)

5. Display the employee details of the employee who’s last_name is King.

mysql> SELECT * FROM EMPLOYEE WHERE LAST_NAME = 'King';
+-------------+-----------+---------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID  | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+---------+--------+----------+--------+---------------+
|         100 | King      | AD_ASST |   8956 |        0 |    108 |           100 |
+-------------+-----------+---------+--------+----------+--------+---------------+
1 row in set (0.00 sec)

6)Display unique job_id from EMPLOYEE table. Give alias name to the column as JOB_TITLE

mysql> SELECT DISTINCT JOB_ID AS 'JOB_TITLE' FROM EMPLOYEE;
+-----------+
| JOB_TITLE |
+-----------+
| AD_ASST   |
| SH_CLEARK |
| IT_PROG   |
| AC_MGR    |
| AD_VP     |
| AD_PRES   |
+-----------+
6 rows in set (0.00 sec)

7)Display last_name, salary and salary increase of Rs300. Give the new column name as ‘Increased Salary’

mysql> SELECT LAST_NAME, SALARY, (SALARY+300) AS INCREASED_SALARY FROM EMPLOYEE;
+-----------+--------+------------------+
| LAST_NAME | SALARY | INCREASED_SALARY |
+-----------+--------+------------------+
| King      |   8956 |             9256 |
| Kohar     |   3400 |             3700 |
| Connell   |   2600 |             2900 |
| Grant     |   2600 |             2900 |
| Whalen    |   4400 |             4700 |
| Hartstein |   6000 |             6300 |
| Fay       |   6500 |             6800 |
| Mavris    |   7500 |             7800 |
| Baer      |   3500 |             3800 |
| Higgins   |   2300 |             2600 |
| Gitz      |   5000 |             5300 |
+-----------+--------+------------------+
11 rows in set (0.00 sec)

8. Display last_name, salary and annual compensation of all employees, plus a onetime bonus of Rs 100. Give an alias name to the column displaying annual compensation.

mysql> SELECT LAST_NAME, SALARY, (SALARY * 12) + 100 AS 'YEARLY INCOME' FROM EMPLOYEE;
+-----------+--------+---------------+
| LAST_NAME | SALARY | YEARLY INCOME |
+-----------+--------+---------------+
| King      |   8956 |        107572 |
| Kohar     |   3400 |         40900 |
| Connell   |   2600 |         31300 |
| Grant     |   2600 |         31300 |
| Whalen    |   4400 |         52900 |
| Hartstein |   6000 |         72100 |
| Fay       |   6500 |         78100 |
| Mavris    |   7500 |         90100 |
| Baer      |   3500 |         42100 |
| Higgins   |   2300 |         27700 |
| Gitz      |   5000 |         60100 |
+-----------+--------+---------------+
11 rows in set (0.00 sec)

9. Display the details of those employees who get commission.

mysql> SELECT * FROM EMPLOYEE WHERE COMM_PCT IS NOT NULL;
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         100 | King      | AD_ASST   |   8956 |        0 |    108 |           100 |
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
|         200 | Whalen    | AD_ASST   |   4400 |        1 |    101 |            10 |
|         204 | Baer      | AD_PRES   |   3500 |        2 |    101 |            90 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
6 rows in set (0.00 sec)

10.Display the details of those employees who do not get commission.

mysql> SELECT * FROM EMPLOYEE WHERE COMM_PCT IS NULL;
+-------------+-----------+---------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID  | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+---------+--------+----------+--------+---------------+
|         201 | Hartstein | IT_PROG |   6000 |     NULL |    100 |            20 |
|         202 | Fay       | AC_MGR  |   6500 |     NULL |    210 |            20 |
|         203 | Mavris    | AD_VP   |   7500 |     NULL |    101 |            40 |
|         205 | Higgins   | AC_MGR  |   2300 |     NULL |    101 |            60 |
|         206 | Gitz      | IT_PROG |   5000 |     NULL |    103 |            60 |
+-------------+-----------+---------+--------+----------+--------+---------------+
5 rows in set (0.00 sec)

11.Display the Employee_id, Department_id and Salary all employees whose salary is greater than 5000.

mysql> SELECT EMPLOYEE_ID, DEPARTMENT_ID, SALARY FROM EMPLOYEE WHERE SALARY > 5000;
+-------------+---------------+--------+
| EMPLOYEE_ID | DEPARTMENT_ID | SALARY |
+-------------+---------------+--------+
|         100 |           100 |   8956 |
|         201 |            20 |   6000 |
|         202 |            20 |   6500 |
|         203 |            40 |   7500 |
+-------------+---------------+--------+
4 rows in set (0.00 sec)

12.Display the Last_Name and Salary of all employees whose salary is between 4000 and 7000.

mysql> SELECT LAST_NAME, SALARY FROM EMPLOYEE WHERE SALARY BETWEEN 4000 AND 7000;
+-----------+--------+
| LAST_NAME | SALARY |
+-----------+--------+
| Whalen    |   4400 |
| Hartstein |   6000 |
| Fay       |   6500 |
| Gitz      |   5000 |
+-----------+--------+
4 rows in set (0.00 sec)

13.Display the details of all employees whose salary is either 6000 or 6500 or 7000.

mysql> SELECT * FROM EMPLOYEE WHERE SALARY IN (6000, 6500, 7000);
+-------------+-----------+---------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID  | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+---------+--------+----------+--------+---------------+
|         201 | Hartstein | IT_PROG |   6000 |     NULL |    100 |            20 |
|         202 | Fay       | AC_MGR  |   6500 |     NULL |    210 |            20 |
+-------------+-----------+---------+--------+----------+--------+---------------+
2 rows in set (0.00 sec)

14.Display the details of all those employees who work either in department 10 or 20 or 30 or 50.

mysql> SELECT * FROM EMPLOYEE WHERE DEPARTMENT_ID IN (10, 20, 30, 50);
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
|         200 | Whalen    | AD_ASST   |   4400 |        1 |    101 |            10 |
|         201 | Hartstein | IT_PROG   |   6000 |     NULL |    100 |            20 |
|         202 | Fay       | AC_MGR    |   6500 |     NULL |    210 |            20 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
6 rows in set (0.00 sec)

15.Display the details of all employees whose salary is not equal to 5000

mysql> SELECT * FROM EMPLOYEE WHERE SALARY != 5000;
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         100 | King      | AD_ASST   |   8956 |        0 |    108 |           100 |
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
|         200 | Whalen    | AD_ASST   |   4400 |        1 |    101 |            10 |
|         201 | Hartstein | IT_PROG   |   6000 |     NULL |    100 |            20 |
|         202 | Fay       | AC_MGR    |   6500 |     NULL |    210 |            20 |
|         203 | Mavris    | AD_VP     |   7500 |     NULL |    101 |            40 |
|         204 | Baer      | AD_PRES   |   3500 |        2 |    101 |            90 |
|         205 | Higgins   | AC_MGR    |   2300 |     NULL |    101 |            60 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
10 rows in set (0.00 sec)

16.Display the details of all the CLERKS working in the organization.

mysql> SELECT * FROM EMPLOYEE WHERE JOB_ID = 'SH_CLEARK';
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
3 rows in set (0.00 sec)

17. Update the job_id’s of the employees who earn more than 5000 to Grade_A. Display the table EMPLOYEE after updating

mysql> UPDATE EMPLOYEE SET JOB_ID = 'Grade_A' WHERE SALARY > 5000;
Query OK, 4 rows affected (0.00 sec)
Rows matched: 4  Changed: 4  Warnings: 0

mysql> SELECT * FROM EMPLOYEE;
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         100 | King      | Grade_A   |   8956 |        0 |    108 |           100 |
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
|         200 | Whalen    | AD_ASST   |   4400 |        1 |    101 |            10 |
|         201 | Hartstein | Grade_A   |   6000 |     NULL |    100 |            20 |
|         202 | Fay       | Grade_A   |   6500 |     NULL |    210 |            20 |
|         203 | Mavris    | Grade_A   |   7500 |     NULL |    101 |            40 |
|         204 | Baer      | AD_PRES   |   3500 |        2 |    101 |            90 |
|         205 | Higgins   | AC_MGR    |   2300 |     NULL |    101 |            60 |
|         206 | Gitz      | IT_PROG   |   5000 |     NULL |    103 |            60 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
11 rows in set (0.00 sec)

18. Display the details of all those employees who are either CLERK or PROGRAMMER or ASSISTANT.

mysql> SELECT * FROM EMPLOYEE WHERE JOB_ID IN ('SH_CLEARK', 'IT_PROG', 'AD_ASST');
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         101 | Kohar     | SH_CLEARK |   3400 |        1 |    118 |            30 |
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
|         200 | Whalen    | AD_ASST   |   4400 |        1 |    101 |            10 |
|         206 | Gitz      | IT_PROG   |   5000 |     NULL |    103 |            60 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
5 rows in set (0.00 sec)

19.Display those employees from the EMPLOYEE table whose designation is CLERK and salary is less than 3000.

mysql> SELECT * FROM EMPLOYEE WHERE JOB_ID = 'SH_CLEARK' AND SALARY < 3000;
+-------------+-----------+-----------+--------+----------+--------+---------------+
| EMPLOYEE_ID | LAST_NAME | JOB_ID    | SALARY | COMM_PCT | MGR_ID | DEPARTMENT_ID |
+-------------+-----------+-----------+--------+----------+--------+---------------+
|         198 | Connell   | SH_CLEARK |   2600 |        3 |    124 |            50 |
|         199 | Grant     | SH_CLEARK |   2600 |        2 |    124 |            50 |
+-------------+-----------+-----------+--------+----------+--------+---------------+
2 rows in set (0.00 sec)

20. Display those employees Last_Name, Mgr_id from the EMPLOYEE table whose salary is above 3000 and work under Manager 101

mysql> SELECT LAST_NAME, MGR_ID FROM EMPLOYEE WHERE SALARY > 3000 AND MGR_ID = 101;
+-----------+--------+
| LAST_NAME | MGR_ID |
+-----------+--------+
| Whalen    |    101 |
| Mavris    |    101 |
| Baer      |    101 |
+-----------+--------+
3 rows in set (0.00 sec)